npm install -g @vue/cli
npm instal
vue init webpack-simple name_folder
заходим в name_folder
npm install
npm run dev

—оздание компонентов:
√ЋќЅјЋ№Ќџ…=>
-создаем в src файл.vue в файле в тэге template создаем что-нибудь
-импортируем в main.js => import Example from './example.vue'
-создаем компонент => Vue.component('app-example',Example)
Example это название импортируемого файла
-в App.vue - пишем в тэге название нашего компонента <app-example>


Ћќ јЋ№Ќџ…=>
-создаем в src файл.vue в файле в теге template создаем что-нибудь
-импортируем в тэге script => import Example from './example.vue'
-в export default{
	components:{
		'app-example': Example,
	}
}
-используем в теге <template>  <app-example></app-example>   </template>

-- добавл€ем в продакшн --
-npm run build - создает папку dict
-из папки dict берем файл build.js и заливаем его на сайт
-в нем уже инициализирован vue и стили и все доп.плагины
-добавл€ем в html <div id="app"></div>  - ¬—®!

scoped дл€ <style> тобишь <style scoped> - стили только внутри компонента
vue create название-проекта
vue inspect > webpack.js
npm run serve или build или lint - лок.сервер, конечный сбор, проверка ошибок

Ѕазовые ѕј ≈“џ:
 1 - Jquery npm install jquery
	import JQuery from 'jquery'
 	let $ = JQuery

 2 - ћодальное окно https://github.com/euvl/vue-js-modal
	npm install vue-js-modal --save	
	import VModal from 'vue-js-modal'
	Vue.use(VModal)

 3 - bootstrap https://bootstrap-vue.js.org/docs
	npm install vue bootstrap-vue bootstrap
	import 'bootstrap/dist/css/bootstrap.css'
	import 'bootstrap-vue/dist/bootstrap-vue.css'

 4 - lazyload подгрузка картинок https://github.com/hilongjw/vue-lazyload
	npm i vue-lazyload -S
	import VueLazyload from 'vue-lazyload'
	Vue.use(VueLazyload)

 5 - scrollto скрол до элемента https://www.npmjs.com/package/vue-scrollto
	npm install --save vue-scrollto
	var VueScrollTo = require('vue-scrollto'); 
	Vue.use(VueScrollTo)
 6 - Vuerouter
	npm install vue-router
	import VueRouter from 'vue-router'
	Vue.use(VueRouter)

	--в main.js--: //создаем массив с пут€ми
		const routes = [
	{path:'/home',component:home}, //пишем сам путь и в него импортируемый нами
компонент
	{path:'/shit',component:shit}
	]
	//экземпл€р объекта роутера
	const router = new VueRouter({
	  routes,
	  mode: 'history'
	})
	new Vue({
  el: '#app',  
  render: h => h(App),
  router //это дописали мы
})
	-- в App.vue--
	<router-link to="/home">Home</router-link> // обычные ссылки
        <router-link to="/shit">this shit</router-link>
	<router-view></router-view>// здесь отображение компонентов этих ссылок

 7 - Axios - https://medium.com/devschacht/%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D1%83%D0%B5%D0%BC-axios-%D0%B2%D0%BC%D0%B5%D1%81%D1%82%D0%B5-%D1%81-vue-js-3bc45464c460
	npm install axios
	import axios from 'axios' - в используемом компоненте
	axios.get('url').then((response)=>{ 
			this.peremennaya = []  
		          this.peremennaya.push(response.data)
		          console.log(this.peremennaya)		          
		        })

	--------- ‘»Ћ№“–џ VUE filters ---------
filters: { // —ќ«ƒј≈ћ ‘»Ћ№“–џ
	    capitalize: function(item) {
	        if (item != " "){
	        	return item
	        }
	    },
	    trim: function(item){ //вырезание пробелов
	    	return item.trim()//trim() метод jquery вроде
	    }
	},
methods:{
	ArrowFilt(data){ //функци€ фильтр . ¬ data кладетс€ элемент из массива
		let some = data.filter(this.$options.filters.capitalize) //обращаемс€ к локальному фильтру 
		return some // возвращаем значение после фильтра
	},
}
ѕ–»ћ≈–:
<p v-for='(next,index) in ArrowFilt(item.description.split("*"))'>{{next | trim}}</p>// {{element | name_filter}}

ѕ–»ћ≈– в DOM сразу:
<img v-for="img in item.img.split('*').filter($options.filters.capitalize)" :src="img">